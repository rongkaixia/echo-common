syntax = "proto3";

package com.echo.protocol.captain;

import "common.proto";

// ./scalapbc-0.5.26/bin/scalapbc protocol/protocol.proto --scala_out=./src/main/scala/
// ./lib/protoc-3.0.0-beta-3-osx-x86_64/protoc --js_out=import_style=commonjs,binary:. ./lib/protocol/protocol.proto
//protoDescriptor.com.echo.protocol.common.ResponseHeader.decode(kv.value.value)
//kv.setValue(protoDescriptor.google.protobuf.Any.decode(header.toBuffer()))
//kv.withValue(com.google.protobuf.Any.parseFrom(header.toByteArray))
//ResponseHeader.parseFrom(v.value.get.toByteArray)
//sbt protobuf:protobufGenerate

enum LoginType{
  LOGIN_TYPE_EMPTY = 0x00000000; // due to the bug of scalapbc, do not use EMPTY in your code

  LOGIN_BY_PHONENUM = 0x00000001;
  LOGIN_BY_EMAIL = 0x00000002;

  LOGIN_BY_WECHAT = 0x00000003;
  LOGIN_BY_WEIBO = 0x00000004;
}

enum AuthType{
  AUTH_TYPE_EMPTY = 0x00000000; // due to the bug of scalapbc, do not use EMPTY in your code

  LOCAL = 0x00000001;
  WECHAT = 0x00000002;
  WEIBO = 0x00000003;
}

// 购物车条目
message CartItem {
  string product_id = 1; //商品ID
  int32 num = 2; //商品数量
  int64 create_at = 10; // 创建时间
  int64 update_at = 11; // 最后更新时间
}

message UserAddress{
  string address_id = 1;
  string recipients_name = 2;
  string recipients_phone = 3;
  string recipients_address = 4;
  string recipients_postcode = 5;
}

message SecurityQuestionPair{
  string question = 1;
  string answer = 2;
}

message UserInfo{
  string user_id = 1;
  string username = 2;
  string email = 3;
  string phonenum = 4;
  SecurityQuestionPair security_question1 = 5;
  SecurityQuestionPair security_question2 = 6;
  SecurityQuestionPair security_question3 = 7;
  repeated UserAddress addresses = 8;
  repeated CartItem cart = 9;
}

message SignupRequest{
  string phonenum = 1;
  string password = 2;
}

message LoginRequest{
  oneof name{
    string phonenum = 1;
    string email = 2;
  }
  string password = 10;
}

message AuthRequest{
  string token = 1;
  // AuthType auth_name = 2;
}

message LogoutRequest{
  string token = 1;
  // AuthType auth_name = 2;
}

message QueryUserInfoRequest{
  string token = 1;
  repeated string fields = 2;
}

message UpdateUserInfoRequest{
  string token = 1;
  string username = 2;
  string email = 3;
  string phonenum = 4;
  string password = 5;
  SecurityQuestionPair security_question1 = 6;
  SecurityQuestionPair security_question2 = 7;
  SecurityQuestionPair security_question3 = 8;
}

message AddUserAddressRequest{
  string token = 1;
  string recipients_name = 3;
  string recipients_phone = 4;
  string recipients_address = 5;
  string recipients_postcode = 6;
}

message UpdateUserAddressRequest{
  string token = 1;
  string address_id = 2;
  string recipients_name = 3;
  string recipients_phone = 4;
  string recipients_address = 5;
  string recipients_postcode = 6;
}

message DeleteUserAddressRequest{
  string token = 1;
  string address_id = 2;
}

//增加或更新用户的购物车
message UpdateUserCartRequest{
  string token = 1;
  string product_id = 2;
  int32 num = 3;
}

message DeleteUserCartRequest{
  string token = 1;
  string product_id = 2;
}

message SignupResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
  string token = 2;
  int32 expires_in = 3;
  string user_id = 4;
  string username = 5;
}

message LoginResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
  string token = 2;
  int32 expires_in = 3;
  string user_id = 4;
  string username = 5;
}

message AuthResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
  bool is_expired = 2;
  int32 expires_in = 3;
  string user_id = 4;
  string username = 5;
}

message LogoutResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

message QueryUserInfoResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
  UserInfo user_info = 2;
}

message UpdateUserInfoResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

message AddUserAddressResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

message UpdateUserAddressResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

message DeleteUserAddressResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

message UpdateUserCartResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

message DeleteUserCartResponse{
  com.echo.protocol.common.ResponseHeader header = 1;
}

// The captain service definition.
service CaptainService {
  rpc Signup (SignupRequest) returns (SignupResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Logout (LogoutRequest) returns (LogoutResponse) {}
  rpc Auth (AuthRequest) returns (AuthResponse) {}

  rpc QueryUserInfo(QueryUserInfoRequest) returns (QueryUserInfoResponse) {}
  rpc UpdateUserInfo(UpdateUserInfoRequest) returns (UpdateUserInfoResponse) {}
  
  rpc AddUserAddress(AddUserAddressRequest) returns (AddUserAddressResponse) {}
  rpc UpdateUserAddress(UpdateUserAddressRequest) returns (UpdateUserAddressResponse) {}
  rpc DeleteUserAddress(DeleteUserAddressRequest) returns (DeleteUserAddressResponse) {}

  rpc UpdateUserCart(UpdateUserCartRequest) returns (UpdateUserCartResponse) {}
  rpc DeleteUserCart(DeleteUserCartRequest) returns (DeleteUserCartResponse) {}
}
